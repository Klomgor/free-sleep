{"version":3,"file":"middleware.js","sources":["setup/middleware.ts"],"sourceRoot":"/","sourcesContent":["import express, { Express } from 'express';\nimport cors from 'cors';\nimport logger from '../logger.js';\n\nimport os from 'os';\n\nconst ALLOWED_ORIGIN = process.env.ALLOWED_ORIGIN;\n\nfunction getLocalIp(): string {\n  const interfaces = os.networkInterfaces();\n  for (const interfaceName in interfaces) {\n    const networkInterface = interfaces[interfaceName];\n    if (!networkInterface) continue;\n\n    for (const network of networkInterface) {\n      if (network.family === 'IPv4' && !network.internal) {\n        return network.address;\n      }\n    }\n  }\n  return 'localhost'; // Default to localhost if LAN IP isn't found\n}\n\n\nexport default function (app: Express) {\n  app.use((req, res, next) => {\n    const startTime = Date.now();\n\n    // Hook into the response `finish` event to log after the response is sent\n    res.on('finish', () => {\n      const duration = Date.now() - startTime;\n      logger.info(`${req.method} ${req.originalUrl} - ${res.statusCode} - ${duration}ms`);\n    });\n\n    next();\n  });\n\n  app.use(express.json());\n\n  // Allow local development\n  app.use(\n    cors({\n      origin: (origin, callback) => {\n        // Allow if origin is LAN IP or localhost\n        if (\n          !origin ||\n          origin?.startsWith(`http://${getLocalIp()}:`) ||\n          origin?.startsWith('http://localhost') ||\n          origin?.startsWith('http://192.168.') ||\n          origin?.startsWith('http://172.16.') ||\n          origin?.startsWith('http://10.0.') ||\n          (ALLOWED_ORIGIN && origin?.startsWith(ALLOWED_ORIGIN))\n        ) {\n          callback(null, true);\n        } else {\n          callback(new Error('Not allowed by CORS'));\n        }\n      }\n    })\n  );\n\n  // Logging\n  app.use((req, res, next) => {\n    const clientIp = req.headers['x-forwarded-for'] || req.ip;\n    const method = req.method;\n    const endpoint = req.originalUrl;\n    logger.debug(`${method} ${endpoint} - IP: ${clientIp}`);\n    next();\n  });\n}\n"],"names":[],"mappings":";;AAAA,OAAO,OAAoB,MAAM,SAAS,CAAC;AAC3C,OAAO,IAAI,MAAM,MAAM,CAAC;AACxB,OAAO,MAAM,MAAM,cAAc,CAAC;AAElC,OAAO,EAAE,MAAM,IAAI,CAAC;AAEpB,MAAM,cAAc,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC;AAElD,SAAS,UAAU;IACjB,MAAM,UAAU,GAAG,EAAE,CAAC,iBAAiB,EAAE,CAAC;IAC1C,KAAK,MAAM,aAAa,IAAI,UAAU,EAAE,CAAC;QACvC,MAAM,gBAAgB,GAAG,UAAU,CAAC,aAAa,CAAC,CAAC;QACnD,IAAI,CAAC,gBAAgB;YAAE,SAAS;QAEhC,KAAK,MAAM,OAAO,IAAI,gBAAgB,EAAE,CAAC;YACvC,IAAI,OAAO,CAAC,MAAM,KAAK,MAAM,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;gBACnD,OAAO,OAAO,CAAC,OAAO,CAAC;YACzB,CAAC;QACH,CAAC;IACH,CAAC;IACD,OAAO,WAAW,CAAC,CAAC,6CAA6C;AACnE,CAAC;AAGD,MAAM,CAAC,OAAO,WAAW,GAAY;IACnC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE;QACzB,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAE7B,0EAA0E;QAC1E,GAAG,CAAC,EAAE,CAAC,QAAQ,EAAE,GAAG,EAAE;YACpB,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS,CAAC;YACxC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,WAAW,MAAM,GAAG,CAAC,UAAU,MAAM,QAAQ,IAAI,CAAC,CAAC;QACtF,CAAC,CAAC,CAAC;QAEH,IAAI,EAAE,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;IAExB,0BAA0B;IAC1B,GAAG,CAAC,GAAG,CACL,IAAI,CAAC;QACH,MAAM,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,EAAE;YAC3B,yCAAyC;YACzC,IACE,CAAC,MAAM;gBACP,MAAM,EAAE,UAAU,CAAC,UAAU,UAAU,EAAE,GAAG,CAAC;gBAC7C,MAAM,EAAE,UAAU,CAAC,kBAAkB,CAAC;gBACtC,MAAM,EAAE,UAAU,CAAC,iBAAiB,CAAC;gBACrC,MAAM,EAAE,UAAU,CAAC,gBAAgB,CAAC;gBACpC,MAAM,EAAE,UAAU,CAAC,cAAc,CAAC;gBAClC,CAAC,cAAc,IAAI,MAAM,EAAE,UAAU,CAAC,cAAc,CAAC,CAAC,EACtD,CAAC;gBACD,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YACvB,CAAC;iBAAM,CAAC;gBACN,QAAQ,CAAC,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC,CAAC;YAC7C,CAAC;QACH,CAAC;KACF,CAAC,CACH,CAAC;IAEF,UAAU;IACV,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE;QACzB,MAAM,QAAQ,GAAG,GAAG,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC;QAC1D,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;QAC1B,MAAM,QAAQ,GAAG,GAAG,CAAC,WAAW,CAAC;QACjC,MAAM,CAAC,KAAK,CAAC,GAAG,MAAM,IAAI,QAAQ,UAAU,QAAQ,EAAE,CAAC,CAAC;QACxD,IAAI,EAAE,CAAC;IACT,CAAC,CAAC,CAAC;AACL,CAAC","debug_id":"c51cf9b7-9dbf-5a69-a5f5-e4455730e9cc"}