{"version":3,"file":"temperatureScheduler.js","sources":["jobs/temperatureScheduler.ts"],"sourceRoot":"/","sourcesContent":["import schedule from 'node-schedule';\n\nimport { DailySchedule, DayOfWeek, Side, Time } from '../db/schedulesSchema.js';\nimport { getDayIndexForSchedule, logJob } from './utils.js';\nimport { Settings } from '../db/settingsSchema.js';\nimport { TimeZone } from '../db/timeZones.js';\nimport { updateDeviceStatus } from '../routes/deviceStatus/updateDeviceStatus.js';\nimport serverStatus from '../serverStatus.js';\nimport logger from '../logger.js';\n\n\nconst scheduleAdjustment = (timeZone: TimeZone, side: Side, day: DayOfWeek, time: Time, temperature: number) => {\n  const onRule = new schedule.RecurrenceRule();\n\n  const dayOfWeekIndex = getDayIndexForSchedule(day, time);\n  const [onHour, onMinute] = time.split(':').map(Number);\n  logJob('Scheduling temperature adjustment job', side, day, dayOfWeekIndex, time);\n\n  onRule.dayOfWeek = dayOfWeekIndex;\n  onRule.hour = onHour;\n  onRule.minute = onMinute;\n  onRule.tz = timeZone;\n\n  schedule.scheduleJob(`${side}-${day}-${time}-${temperature}-temperature-adjustment`, onRule, async () => {\n    try {\n\n      logJob('Executing temperature adjustment job', side, day, dayOfWeekIndex, time);\n      await updateDeviceStatus({\n        [side]: {\n          targetTemperatureF: temperature,\n        }\n      });\n      serverStatus.status.temperatureSchedule.status = 'healthy';\n      serverStatus.status.temperatureSchedule.message = '';\n    } catch (error: unknown) {\n      serverStatus.status.temperatureSchedule.status = 'failed';\n      const message = error instanceof Error ? error.message : String(error);\n      serverStatus.status.temperatureSchedule.message = message;\n      logger.error(error);\n    }\n  });\n};\n\nexport const scheduleTemperatures = (settingsData: Settings, side: Side, day: DayOfWeek, temperatures: DailySchedule['temperatures']) => {\n  if (settingsData[side].awayMode) return;\n  const { timeZone } = settingsData;\n  if (timeZone === null) return;\n\n  Object.entries(temperatures).forEach(([time, temperature]) => {\n    scheduleAdjustment(timeZone, side, day, time, temperature);\n  });\n};\n"],"names":[],"mappings":";;AAAA,OAAO,QAAQ,MAAM,eAAe,CAAC;AAGrC,OAAO,EAAE,sBAAsB,EAAE,MAAM,EAAE,MAAM,YAAY,CAAC;AAG5D,OAAO,EAAE,kBAAkB,EAAE,MAAM,8CAA8C,CAAC;AAClF,OAAO,YAAY,MAAM,oBAAoB,CAAC;AAC9C,OAAO,MAAM,MAAM,cAAc,CAAC;AAGlC,MAAM,kBAAkB,GAAG,CAAC,QAAkB,EAAE,IAAU,EAAE,GAAc,EAAE,IAAU,EAAE,WAAmB,EAAE,EAAE;IAC7G,MAAM,MAAM,GAAG,IAAI,QAAQ,CAAC,cAAc,EAAE,CAAC;IAE7C,MAAM,cAAc,GAAG,sBAAsB,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IACzD,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACvD,MAAM,CAAC,uCAAuC,EAAE,IAAI,EAAE,GAAG,EAAE,cAAc,EAAE,IAAI,CAAC,CAAC;IAEjF,MAAM,CAAC,SAAS,GAAG,cAAc,CAAC;IAClC,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC;IACrB,MAAM,CAAC,MAAM,GAAG,QAAQ,CAAC;IACzB,MAAM,CAAC,EAAE,GAAG,QAAQ,CAAC;IAErB,QAAQ,CAAC,WAAW,CAAC,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,WAAW,yBAAyB,EAAE,MAAM,EAAE,KAAK,IAAI,EAAE;QACtG,IAAI,CAAC;YAEH,MAAM,CAAC,sCAAsC,EAAE,IAAI,EAAE,GAAG,EAAE,cAAc,EAAE,IAAI,CAAC,CAAC;YAChF,MAAM,kBAAkB,CAAC;gBACvB,CAAC,IAAI,CAAC,EAAE;oBACN,kBAAkB,EAAE,WAAW;iBAChC;aACF,CAAC,CAAC;YACH,YAAY,CAAC,MAAM,CAAC,mBAAmB,CAAC,MAAM,GAAG,SAAS,CAAC;YAC3D,YAAY,CAAC,MAAM,CAAC,mBAAmB,CAAC,OAAO,GAAG,EAAE,CAAC;QACvD,CAAC;QAAC,OAAO,KAAc,EAAE,CAAC;YACxB,YAAY,CAAC,MAAM,CAAC,mBAAmB,CAAC,MAAM,GAAG,QAAQ,CAAC;YAC1D,MAAM,OAAO,GAAG,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACvE,YAAY,CAAC,MAAM,CAAC,mBAAmB,CAAC,OAAO,GAAG,OAAO,CAAC;YAC1D,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACtB,CAAC;IACH,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,oBAAoB,GAAG,CAAC,YAAsB,EAAE,IAAU,EAAE,GAAc,EAAE,YAA2C,EAAE,EAAE;IACtI,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC,QAAQ;QAAE,OAAO;IACxC,MAAM,EAAE,QAAQ,EAAE,GAAG,YAAY,CAAC;IAClC,IAAI,QAAQ,KAAK,IAAI;QAAE,OAAO;IAE9B,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE,WAAW,CAAC,EAAE,EAAE;QAC3D,kBAAkB,CAAC,QAAQ,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;IAC7D,CAAC,CAAC,CAAC;AACL,CAAC,CAAC","debug_id":"a03a9e7f-1f56-5115-ab06-7794734144b4"}