{"version":3,"file":"powerScheduler.js","sources":["jobs/powerScheduler.ts"],"sourceRoot":"/","sourcesContent":["import schedule from 'node-schedule';\nimport { Settings } from '../db/settingsSchema.js';\nimport { DailySchedule, DayOfWeek, Side } from '../db/schedulesSchema.js';\nimport { updateDeviceStatus } from '../routes/deviceStatus/updateDeviceStatus.js';\nimport { getDayIndexForSchedule, getDayOfWeekIndex, logJob } from './utils.js';\nimport { executeAnalyzeSleep } from './analyzeSleep.js';\nimport { TimeZone } from '../db/timeZones.js';\nimport moment from 'moment-timezone';\nimport serverStatus from '../serverStatus.js';\nimport logger from '../logger.js';\nimport servicesDB from '../db/services.js';\n\n\nexport const schedulePowerOn = (settingsData: Settings, side: Side, day: DayOfWeek, power: DailySchedule['power']) => {\n  if (!power.enabled) return;\n  if (settingsData[side].awayMode) return;\n  if (settingsData.timeZone === null) return;\n\n  const onRule = new schedule.RecurrenceRule();\n  const dayOfWeekIndex = getDayOfWeekIndex(day);\n  onRule.dayOfWeek = dayOfWeekIndex;\n  const [onHour, onMinute] = power.on.split(':').map(Number);\n  const time = power.on;\n  onRule.hour = onHour;\n  onRule.minute = onMinute;\n  onRule.tz = settingsData.timeZone;\n\n  logJob('Scheduling power on job', side, day, dayOfWeekIndex, time);\n  schedule.scheduleJob(`${side}-${day}-${time}-power-on`, onRule, async () => {\n    try {\n      logJob('Executing power on job', side, day, dayOfWeekIndex, time);\n\n      await updateDeviceStatus({\n        [side]: {\n          isOn: true,\n          targetTemperatureF: power.onTemperature\n        }\n      });\n      serverStatus.status.powerSchedule.status = 'healthy';\n      serverStatus.status.powerSchedule.message = '';\n    } catch (error: unknown) {\n      serverStatus.status.powerSchedule.status = 'failed';\n      const message = error instanceof Error ? error.message : String(error);\n      serverStatus.status.powerSchedule.message = message;\n      logger.error(error);\n    }\n  });\n};\n\n\nconst scheduleAnalyzeSleep = (dayOfWeekIndex: number, offHour: number, offMinute: number, timeZone: TimeZone, side: Side, day: DayOfWeek) => {\n  const dailyRule = new schedule.RecurrenceRule();\n  const adjustedOffMinute = offMinute;\n  dailyRule.dayOfWeek = dayOfWeekIndex;\n  dailyRule.hour = offHour;\n  dailyRule.minute = adjustedOffMinute;\n  dailyRule.tz = timeZone;\n  const time = `${String(offHour).padStart(2, '0')}:${String(adjustedOffMinute).padStart(2, '0')}`;\n  logJob('Scheduling daily sleep analyzer job', side, day, dayOfWeekIndex, time);\n  schedule.scheduleJob(`daily-analyze-sleep-${time}-${side}`, dailyRule, async () => {\n    await servicesDB.read();\n    if (!servicesDB.data.biometrics.enabled) {\n      logger.debug('Not executing sleep analyzer job, biometrics is disabled');\n      return;\n    }\n    logJob('Executing daily sleep analyzer job', side, day, dayOfWeekIndex, time);\n    // Subtract a fixed start time\n    executeAnalyzeSleep(side, moment().subtract(12, 'hours').toISOString(), moment().add(1, 'hours').toISOString());\n  });\n};\n\n\nexport const schedulePowerOffAndSleepAnalysis = (settingsData: Settings, side: Side, day: DayOfWeek, power: DailySchedule['power']) => {\n  if (!power.enabled) return;\n  if (settingsData[side].awayMode) return;\n  if (settingsData.timeZone === null) return;\n\n  const offRule = new schedule.RecurrenceRule();\n  const dayOfWeekIndex = getDayIndexForSchedule(day, power.off);\n  offRule.dayOfWeek = dayOfWeekIndex;\n  const time = power.off;\n  const [offHour, offMinute] = time.split(':').map(Number);\n  offRule.hour = offHour;\n  offRule.minute = offMinute;\n  offRule.tz = settingsData.timeZone;\n  scheduleAnalyzeSleep(dayOfWeekIndex, offHour, offMinute, settingsData.timeZone, side, day);\n  logJob('Scheduling power off job', side, day, dayOfWeekIndex, time);\n\n  schedule.scheduleJob(`${side}-${day}-${time}-power-off`, offRule, async () => {\n    try {\n      logJob('Executing power off job', side, day, dayOfWeekIndex, time);\n      await updateDeviceStatus({\n        [side]: {\n          isOn: false,\n        }\n      });\n      serverStatus.status.powerSchedule.status = 'healthy';\n      serverStatus.status.powerSchedule.message = '';\n    } catch (error: unknown) {\n      serverStatus.status.powerSchedule.status = 'failed';\n      const message = error instanceof Error ? error.message : String(error);\n      serverStatus.status.powerSchedule.message = message;\n      logger.error(error);\n    }\n  });\n};\n\n\n"],"names":[],"mappings":"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","debug_id":"0a92f603-62dd-5c57-9987-eb00063e5d9e"}