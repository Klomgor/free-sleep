{"version":3,"file":"logs.js","sources":["routes/logs/logs.ts"],"sourceRoot":"/","sourcesContent":["import express from 'express';\nimport path from 'path';\nimport fs from 'fs';\nimport readline from 'readline';\nimport logger from '../../logger.js';\n\nconst router = express.Router();\n\nconst LOGS_DIRS = ['/persistent/free-sleep-data/logs', '/var/log'];\n\n// Endpoint to list all log files as clickable links\nrouter.get('/', (req, res) => {\n  let allLogFiles: string[] = [];\n\n  // Read logs from both directories\n  LOGS_DIRS.forEach((dir) => {\n    if (!fs.existsSync(dir)) return;\n\n    try {\n      const files = fs.readdirSync(dir)\n        .map(file => {\n          const fullPath = path.join(dir, file);\n\n          try {\n            const stat = fs.lstatSync(fullPath);\n            return stat.isFile() && file.endsWith('log')\n              ? { name: file, path: fullPath, mtime: stat.mtime.getTime() }\n              : null;\n          } catch (error) {\n            logger.warn(`Skipping invalid file: ${fullPath}`);\n            return null;\n          }\n        })\n        .filter(Boolean);\n\n      // @ts-ignore\n      allLogFiles = [...allLogFiles, ...files];\n    } catch (err) {\n      logger.error(`Error reading logs from ${dir}:`, err);\n    }\n  });\n\n\n  // @ts-ignore\n  allLogFiles.sort((a, b) => b.mtime - a.mtime);\n\n  res.json({\n    // @ts-ignore\n    logs: allLogFiles.map(log => log.name),\n  });\n});\n\n\n// @ts-ignore\nrouter.get('/:filename', async (req, res) => {\n  res.setHeader('Content-Type', 'text/event-stream');\n  res.setHeader('Cache-Control', 'no-cache');\n  res.setHeader('Connection', 'keep-alive');\n\n  const filename = req.params.filename;\n\n  let logFilePath = null;\n  for (const dir of LOGS_DIRS) {\n    const fullPath = path.join(dir, filename);\n    if (fs.existsSync(fullPath)) {\n      logFilePath = fullPath;\n      break;\n    }\n  }\n\n  if (!logFilePath) {\n    res.write(`data: ${JSON.stringify({ message: 'Log file not found' })}\\n\\n`);\n    return res.end();\n  }\n\n  let logBuffer = [];\n\n  const fileStream = fs.createReadStream(logFilePath, { encoding: 'utf8' });\n  const rl = readline.createInterface({ input: fileStream });\n\n  for await (const line of rl) {\n    logBuffer.push(line);\n    if (logBuffer.length > 1000) logBuffer.shift(); // Keep last 1000 lines\n  }\n\n  res.write(`data: ${JSON.stringify({ message: logBuffer.join('\\n') })}\\n\\n`);\n\n  // @ts-ignore\n  const logStream = fs.watch(logFilePath, { interval: 1000 }, async () => {\n    const newFileStream = fs.createReadStream(logFilePath, { encoding: 'utf8' });\n    const newRl = readline.createInterface({ input: newFileStream });\n\n    const newLogs = [];\n    for await (const line of newRl) newLogs.push(line);\n\n    if (newLogs.length > logBuffer.length) {\n      const newEntries = newLogs.slice(-1000);\n      logBuffer = newEntries;\n      res.write(`data: ${JSON.stringify({ message: newEntries.join('\\n') })}\\n\\n`);\n    }\n  });\n\n  req.on('close', () => {\n    logStream.close();\n    res.end();\n  });\n});\n\nexport default router;\n"],"names":[],"mappings":"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","debug_id":"2182097c-0335-5bb8-9c62-9bbb6dfb6ffc"}