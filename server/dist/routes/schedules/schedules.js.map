{"version":3,"file":"schedules.js","sources":["routes/schedules/schedules.ts"],"sourceRoot":"/","sourcesContent":["import _ from 'lodash';\nimport express, { Request, Response } from 'express';\n// @ts-ignore\nimport { partialUtil } from 'zod/lib/helpers/partialUtil';\nimport DeepPartial = partialUtil.DeepPartial;\nimport { Schedules } from '../../db/schedulesSchema.js';\nimport logger from '../../logger.js';\nimport schedulesDB from '../../db/schedules.js';\n\n\nimport {\n  DailySchedule,\n  DayOfWeek,\n  SchedulesSchema,\n  Side,\n  SideSchedule,\n} from '../../db/schedulesSchema.js';\n\nconst router = express.Router();\n\n\nrouter.get('/schedules', async (req: Request, res: Response) => {\n  await schedulesDB.read();\n  res.json(schedulesDB.data);\n});\n\nrouter.post('/schedules', async (req: Request, res: Response) => {\n  const body = req.body;\n  const validationResult = SchedulesSchema.deepPartial().safeParse(body);\n  if (!validationResult.success) {\n    logger.error('Invalid schedules update:', validationResult.error);\n    res.status(400).json({\n      error: 'Invalid request data',\n      details: validationResult?.error?.errors,\n    });\n    return;\n  }\n  // @ts-ignore\n  const schedules: DeepPartial<Schedules> = validationResult.data;\n  await schedulesDB.read();\n\n  (\n    Object.entries(schedules) as [Side, Partial<SideSchedule>][]).forEach(([side, sideSchedule]) => {\n    (Object.entries(sideSchedule) as [DayOfWeek, Partial<DailySchedule>][]).forEach(([day, schedule]) => {\n      if (schedule.power) {\n        _.merge(schedulesDB.data[side][day].power, schedule.power);\n      }\n      if (schedule.temperatures) schedulesDB.data[side][day].temperatures = schedule.temperatures;\n      if (schedule.alarm) schedulesDB.data[side][day].alarm = schedule.alarm;\n    });\n  });\n  await schedulesDB.write();\n  res.status(200).json(schedulesDB.data);\n});\n\n\nexport default router;\n"],"names":[],"mappings":";;AAAA,OAAO,CAAC,MAAM,QAAQ,CAAC;AACvB,OAAO,OAA8B,MAAM,SAAS,CAAC;AAKrD,OAAO,MAAM,MAAM,iBAAiB,CAAC;AACrC,OAAO,WAAW,MAAM,uBAAuB,CAAC;AAGhD,OAAO,EAGL,eAAe,GAGhB,MAAM,6BAA6B,CAAC;AAErC,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;AAGhC,MAAM,CAAC,GAAG,CAAC,YAAY,EAAE,KAAK,EAAE,GAAY,EAAE,GAAa,EAAE,EAAE;IAC7D,MAAM,WAAW,CAAC,IAAI,EAAE,CAAC;IACzB,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,KAAK,EAAE,GAAY,EAAE,GAAa,EAAE,EAAE;IAC9D,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;IACtB,MAAM,gBAAgB,GAAG,eAAe,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IACvE,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC;QAC9B,MAAM,CAAC,KAAK,CAAC,2BAA2B,EAAE,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAClE,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACnB,KAAK,EAAE,sBAAsB;YAC7B,OAAO,EAAE,gBAAgB,EAAE,KAAK,EAAE,MAAM;SACzC,CAAC,CAAC;QACH,OAAO;IACT,CAAC;IACD,aAAa;IACb,MAAM,SAAS,GAA2B,gBAAgB,CAAC,IAAI,CAAC;IAChE,MAAM,WAAW,CAAC,IAAI,EAAE,CAAC;IAGvB,MAAM,CAAC,OAAO,CAAC,SAAS,CAAqC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE,YAAY,CAAC,EAAE,EAAE;QAC9F,MAAM,CAAC,OAAO,CAAC,YAAY,CAA2C,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,QAAQ,CAAC,EAAE,EAAE;YAClG,IAAI,QAAQ,CAAC,KAAK,EAAE,CAAC;gBACnB,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;YAC7D,CAAC;YACD,IAAI,QAAQ,CAAC,YAAY;gBAAE,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,YAAY,GAAG,QAAQ,CAAC,YAAY,CAAC;YAC5F,IAAI,QAAQ,CAAC,KAAK;gBAAE,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;QACzE,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IACH,MAAM,WAAW,CAAC,KAAK,EAAE,CAAC;IAC1B,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC;AAGH,eAAe,MAAM,CAAC","debug_id":"fac25006-3d1e-5059-ae48-f8d607bf4009"}