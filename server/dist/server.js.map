{"version":3,"file":"server.js","sources":["server.ts"],"sourceRoot":"/","sourcesContent":["import './instrument.js';\nimport express from 'express';\nimport schedule from 'node-schedule';\nimport { Server } from 'http';\nimport logger from './logger.js';\nimport { getFranken, getFrankenServer } from './8sleep/frankenServer.js';\nimport './jobs/jobScheduler.js';\n\n\n// Setup code\nimport setupMiddleware from './setup/middleware.js';\nimport setupRoutes from './setup/routes.js';\nimport config from './config.js';\nimport serverStatus from './serverStatus.js';\nimport { prisma } from './db/prisma.js';\nimport { setupSentryTags } from './setupSentryTags.js';\n\nconst port = 3000;\nconst app = express();\nlet server: Server | undefined;\n\n\nasync function disconnectPrisma() {\n  try {\n    logger.debug('Flushing SQLite');\n    // Flush WAL into main DB and truncate WAL file (no-op if not in WAL mode)\n    await prisma.$queryRawUnsafe('PRAGMA wal_checkpoint(TRUNCATE)');\n    logger.debug('Flushed SQLite');\n  } catch (error) {\n    logger.error('Error flushing SQLite');\n    const message = error instanceof Error ? error.message : String(error);\n    logger.error(message);\n  }\n  try {\n    logger.debug('Disconnecting Prisma');\n    await prisma.$disconnect();\n    logger.debug('Disconnected Prisma');\n  } catch (error) {\n    logger.error('Error disconnecting from Prisma');\n    const message = error instanceof Error ? error.message : String(error);\n    logger.error(message);\n  }\n}\n\n\n// Graceful Shutdown Function\nasync function gracefulShutdown(signal: string) {\n  logger.debug(`\\nReceived ${signal}. Initiating graceful shutdown...`);\n  let finishedExiting = false;\n\n  // Force shutdown after 10 seconds\n  setTimeout(() => {\n    if (finishedExiting) return;\n    const error = new Error('Could not close connections in time. Forcing shutdown.');\n    logger.error({ error });\n    process.exit(1);\n  }, 15_000);\n  logger.debug('Stopping node-schedule');\n  await schedule.gracefulShutdown();\n  await disconnectPrisma();\n\n\n  try {\n    if (server) {\n      // Stop accepting new connections\n      server.close(() => {\n        logger.debug('Closed out remaining HTTP connections.');\n      });\n    }\n\n    if (!config.remoteDevMode) {\n      const franken = await getFranken();\n      const frankenServer = await getFrankenServer();\n\n      // Close the Franken instance and server\n      franken.close();\n      await frankenServer.close();\n      logger.debug('Successfully closed Franken & FrankenServer.');\n    }\n  } catch (err) {\n    logger.error(`Error during shutdown: ${err}`);\n  }\n\n  finishedExiting = true;\n  logger.debug('Exiting now...');\n  process.exit(0);\n}\n\n// Initialize Franken on server startup\nasync function initFranken() {\n  logger.info('Initializing Franken on startup...');\n  serverStatus.status.franken.status = 'started';\n  // Force creation of the Franken and FrankenServer so itâ€™s ready before we listen\n  await getFranken();\n  serverStatus.status.franken.status = 'healthy';\n  logger.info('Franken has been initialized successfully.');\n}\n\n\n\n// Main startup function\nasync function startServer() {\n  setupMiddleware(app);\n  setupRoutes(app);\n  // Listen on desired port\n  server = app.listen(port, () => {\n    logger.debug(`Server running on http://localhost:${port}`);\n  });\n  serverStatus.status.express.status = 'healthy';\n  serverStatus.status.logger.status = 'healthy';\n\n  // Initialize Franken once before listening\n  if (!config.remoteDevMode) {\n    initFranken()\n      .then(() => setupSentryTags())\n      .catch(error => {\n        serverStatus.status.franken.status = 'failed';\n        const message = error instanceof Error ? error.message : String(error);\n        serverStatus.status.franken.message = message;\n\n        logger.error(error);\n      });\n  }\n\n  // Register signal handlers for graceful shutdown\n  process.on('SIGTERM', () => gracefulShutdown('SIGTERM'));\n  process.on('SIGINT', () => gracefulShutdown('SIGINT'));\n\n  // Handle uncaught exceptions and rejections\n  process.on('uncaughtException', async (err) => {\n    console.error('Uncaught Exception:', err);\n    logger.error(err);\n    await gracefulShutdown('uncaughtException');\n  });\n  process.on('unhandledRejection', async (reason, promise) => {\n    logger.error('Unhandled Rejection at:', promise, 'reason:', reason);\n    await gracefulShutdown('unhandledRejection');\n  });\n}\n\n// Actually start the server\nstartServer().catch((err) => {\n  logger.error('Failed to start server:', err);\n  process.exit(1);\n});\n"],"names":[],"mappings":"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","debug_id":"f4e537ad-e4b7-5714-8749-2245f4fe4ff8"}