{"version":3,"file":"messageStream.js","sources":["8sleep/messageStream.ts"],"sourceRoot":"/","sourcesContent":["import { PromiseReadStream } from './promiseStream.js';\n\nexport class MessageStream {\n  private buffer = Buffer.alloc(0);\n\n  public constructor(\n    private readonly stream: PromiseReadStream<Buffer>,\n    private readonly separator = Buffer.from('\\n\\n')\n  ) {\n  }\n\n  public async readMessage() {\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      const index = this.buffer.indexOf(this.separator);\n      if (index >= 0) {\n        const message = this.buffer.slice(0, index);\n\n        const messageLength = index + this.separator.length;\n        this.buffer = this.buffer.slice(messageLength);\n        return message;\n      }\n\n      await this.needMoreData();\n    }\n  }\n\n  private async needMoreData() {\n    const read = await this.stream.read();\n    if (read === undefined) throw new Error('stream ended');\n    this.buffer = Buffer.concat([this.buffer, read]);\n  }\n}\n"],"names":[],"mappings":";;AAEA,MAAM,OAAO,aAAa;IAIL;IACA;IAJX,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAEjC,YACmB,MAAiC,EACjC,YAAY,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QAD/B,WAAM,GAAN,MAAM,CAA2B;QACjC,cAAS,GAAT,SAAS,CAAsB;IAElD,CAAC;IAEM,KAAK,CAAC,WAAW;QACtB,iDAAiD;QACjD,OAAO,IAAI,EAAE,CAAC;YACZ,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAClD,IAAI,KAAK,IAAI,CAAC,EAAE,CAAC;gBACf,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;gBAE5C,MAAM,aAAa,GAAG,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBACpD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;gBAC/C,OAAO,OAAO,CAAC;YACjB,CAAC;YAED,MAAM,IAAI,CAAC,YAAY,EAAE,CAAC;QAC5B,CAAC;IACH,CAAC;IAEO,KAAK,CAAC,YAAY;QACxB,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;QACtC,IAAI,IAAI,KAAK,SAAS;YAAE,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;QACxD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC;IACnD,CAAC;CACF","debug_id":"4e820525-4b2c-50f2-89fa-42b313e4d3db"}