{"version":3,"file":"loadDeviceStatus.js","sources":["8sleep/loadDeviceStatus.ts"],"sourceRoot":"/","sourcesContent":["import { z } from 'zod';\nimport { DeviceStatus, Version } from '../routes/deviceStatus/deviceStatusSchema.js';\nimport logger from '../logger.js';\nimport memoryDB from '../db/memoryDB.js';\nimport cbor from 'cbor';\nimport { access, readFile } from 'fs/promises';\nimport { constants } from 'fs';\nimport _ from 'lodash';\nimport serverInfo from '../serverInfo.json' with { type: 'json' };\nimport { WIFI_SIGNAL_STRENGTH } from './wifiSignalStrength.js';\n\n\nconst RawDeviceData = z.object({\n  tgHeatLevelR: z.string().regex(/^-?\\d+$/, { message: 'tgHeatLevelR must be a numeric value in a string' }),\n  tgHeatLevelL: z.string().regex(/^-?\\d+$/, { message: 'tgHeatLevelL must be a numeric value in a string' }),\n  heatTimeL: z.string().regex(/^\\d+$/, { message: 'heatTimeL must be a positive numeric value in a string' }),\n  heatLevelL: z.string().regex(/^-?\\d+$/, { message: 'heatLevelL must be a numeric value in a string' }),\n  heatTimeR: z.string().regex(/^\\d+$/, { message: 'heatTimeR must be a positive numeric value in a string' }),\n  heatLevelR: z.string().regex(/^-?\\d+$/, { message: 'heatLevelR must be a numeric value in a string' }),\n  sensorLabel: z.string(),\n  waterLevel: z.string().regex(/^(true|false)$/, { message: 'waterLevel must be \"true\" or \"false\"' }),\n  priming: z.string().regex(/^(true|false)$/, { message: 'priming must be \"true\" or \"false\"' }),\n  settings: z.string(),\n});\n\ntype RawDeviceDataType = z.infer<typeof RawDeviceData>;\n\n// Reads & validates the raw response data from socket and converts it to an object\nconst parseRawDeviceData = (response: string): RawDeviceDataType => {\n  const rawDeviceData = Object.fromEntries(response.split('\\n').map(l => l.split(' = ')));\n\n  try {\n    RawDeviceData.parse(rawDeviceData);\n    return rawDeviceData;\n  } catch (error) {\n    logger.error(error);\n    throw error;\n  }\n};\n\n// Scale goes from -100 < - > 100\n// Low  -> 55\n// High -> 110\n// 0 -> 82.5f\n// -100 -> 55f\n// 100 -> 110f\nconst calculateTempInF = (value: string): number => {\n  const level = Number(value);\n  if (level === 0) {\n    // Technically 0 is 82.5, rounding the temperature simplifies everything though...\n    return 83;\n  } else if (level < 0) {\n    return Math.round(82.5 - (-1 * level / 100) * 27.5);\n  } else {\n    return Math.round(82.5 + (level / 100) * 27.5);\n  }\n};\n\nexport const SETTINGS_KEY_MAPPING = {\n  gl: 'gainLeft',\n  gr: 'gainRight',\n  lb: 'ledBrightness',\n};\n\nexport const INVERTED_SETTINGS_KEY_MAPPING = _.invert(SETTINGS_KEY_MAPPING);\n// Raw settings string is a CBOR encoded string\nconst decodeSettings = (rawSettings: string): DeviceStatus['settings'] => {\n  // Convert hex string to a buffer\n  const cborBuffer = Buffer.from(rawSettings.replace(/\"/g, ''), 'hex');\n  const decoded = cbor.decode(cborBuffer);\n  // @ts-ignore\n  const renamedDecoded = _.mapKeys(decoded, (value, key) => SETTINGS_KEY_MAPPING[key] || key);\n  return renamedDecoded as DeviceStatus['settings'];\n};\n\n\n\nconst detectCoverVersion = (sensorLabel?: string): Version => {\n  try {\n    if (!sensorLabel) return Version.NotFound;\n    const hwRev = sensorLabel.split('-')[2];\n    if (hwRev >= 'J00') {\n      // Guessing Pod 5 here, based off Discord\n      // https://discord.com/channels/1326539919467745361/1430959872408686775/1431033889924579419\n      return Version.Pod5;\n    } else if (hwRev >= 'I00') {\n      return Version.Pod4;\n    } else if (hwRev >= 'H00') {\n      return Version.Pod3;\n    } else {\n      return Version.NotFound;\n    }\n  } catch (error) {\n    logger.error(error);\n    return Version.NotFound;\n  }\n};\n\nconst loadDeviceLabel = async (): Promise<string | undefined> => {\n  const pathVersions = [\n    '/deviceinfo/device-label',\n    '/persistent/deviceinfo/device-label',\n  ];\n  for (const path of pathVersions) {\n    const exists = await access(path, constants.F_OK)\n      .then(() => true)\n      .catch(() => false);\n\n    if (exists) {\n      return readFile(path, 'utf-8');\n    }\n  }\n  logger.info('Device label not found');\n  return undefined;\n};\n\n\nconst detectHubVersion = async (): Promise<Version> => {\n  try {\n    const label = await loadDeviceLabel();\n    if (!label) return Version.NotFound;\n    const hwRev = label.split('-')[2];\n    if (hwRev >= 'G53') {\n      // Guessing Pod 5 here, based off Discord\n      // https://discord.com/channels/1326539919467745361/1430959872408686775/1431033889924579419\n      return Version.Pod5;\n    } else if (hwRev >= 'G00') {\n      return Version.Pod4;\n    } else {\n      const pod3PathExists = await access('/deviceinfo/device-label', constants.F_OK)\n        .then(() => true)\n        .catch(() => false);\n      if (pod3PathExists) return Version.Pod3;\n    }\n    return Version.NotFound;\n  } catch (error) {\n    logger.error(error);\n    return Version.NotFound;\n  }\n};\n\nconst HUB_VERSION = await detectHubVersion();\n\n// The default naming convention was ugly... This remaps the keys to human-readable names\nexport async function loadDeviceStatus(response: string): Promise<DeviceStatus> {\n  const rawDeviceData = parseRawDeviceData(response);\n  const leftSideSecondsRemaining = Number(rawDeviceData.heatTimeL);\n  const rightSideSecondsRemaining = Number(rawDeviceData.heatTimeR);\n  await memoryDB.read();\n  return {\n    left: {\n      currentTemperatureLevel: Number.parseInt(rawDeviceData.heatLevelL, 10),\n      currentTemperatureF: calculateTempInF(rawDeviceData.heatLevelL),\n      targetTemperatureF: calculateTempInF(rawDeviceData.tgHeatLevelL),\n      secondsRemaining: leftSideSecondsRemaining,\n      isOn: leftSideSecondsRemaining > 0,\n      isAlarmVibrating: memoryDB.data.left.isAlarmVibrating,\n    },\n    right: {\n      currentTemperatureLevel: Number.parseInt(rawDeviceData.heatLevelR, 10),\n      currentTemperatureF: calculateTempInF(rawDeviceData.heatLevelR),\n      targetTemperatureF: calculateTempInF(rawDeviceData.tgHeatLevelR),\n      secondsRemaining: rightSideSecondsRemaining,\n      isOn: rightSideSecondsRemaining > 0,\n      isAlarmVibrating: memoryDB.data.right.isAlarmVibrating,\n    },\n    coverVersion: detectCoverVersion(rawDeviceData.sensorLabel),\n    hubVersion: HUB_VERSION,\n    freeSleep: {\n      version: serverInfo.version,\n      branch: serverInfo.branch,\n    },\n    waterLevel: rawDeviceData.waterLevel,\n    isPriming: rawDeviceData.priming === 'true',\n    settings: decodeSettings(rawDeviceData.settings),\n    wifiStrength: WIFI_SIGNAL_STRENGTH,\n  };\n}\n"],"names":[],"mappings":";;AAAA,OAAO,EAAE,CAAC,EAAE,MAAM,KAAK,CAAC;AACxB,OAAO,EAAgB,OAAO,EAAE,MAAM,8CAA8C,CAAC;AACrF,OAAO,MAAM,MAAM,cAAc,CAAC;AAClC,OAAO,QAAQ,MAAM,mBAAmB,CAAC;AACzC,OAAO,IAAI,MAAM,MAAM,CAAC;AACxB,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AAC/C,OAAO,EAAE,SAAS,EAAE,MAAM,IAAI,CAAC;AAC/B,OAAO,CAAC,MAAM,QAAQ,CAAC;AACvB,OAAO,UAAU,MAAM,oBAAoB,CAAC,OAAO,IAAI,EAAE,MAAM,EAAE,CAAC;AAClE,OAAO,EAAE,oBAAoB,EAAE,MAAM,yBAAyB,CAAC;AAG/D,MAAM,aAAa,GAAG,CAAC,CAAC,MAAM,CAAC;IAC7B,YAAY,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,SAAS,EAAE,EAAE,OAAO,EAAE,kDAAkD,EAAE,CAAC;IAC1G,YAAY,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,SAAS,EAAE,EAAE,OAAO,EAAE,kDAAkD,EAAE,CAAC;IAC1G,SAAS,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE,OAAO,EAAE,wDAAwD,EAAE,CAAC;IAC3G,UAAU,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,SAAS,EAAE,EAAE,OAAO,EAAE,gDAAgD,EAAE,CAAC;IACtG,SAAS,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE,OAAO,EAAE,wDAAwD,EAAE,CAAC;IAC3G,UAAU,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,SAAS,EAAE,EAAE,OAAO,EAAE,gDAAgD,EAAE,CAAC;IACtG,WAAW,EAAE,CAAC,CAAC,MAAM,EAAE;IACvB,UAAU,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,gBAAgB,EAAE,EAAE,OAAO,EAAE,sCAAsC,EAAE,CAAC;IACnG,OAAO,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,gBAAgB,EAAE,EAAE,OAAO,EAAE,mCAAmC,EAAE,CAAC;IAC7F,QAAQ,EAAE,CAAC,CAAC,MAAM,EAAE;CACrB,CAAC,CAAC;AAIH,mFAAmF;AACnF,MAAM,kBAAkB,GAAG,CAAC,QAAgB,EAAqB,EAAE;IACjE,MAAM,aAAa,GAAG,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAExF,IAAI,CAAC;QACH,aAAa,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;QACnC,OAAO,aAAa,CAAC;IACvB,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACpB,MAAM,KAAK,CAAC;IACd,CAAC;AACH,CAAC,CAAC;AAEF,iCAAiC;AACjC,aAAa;AACb,cAAc;AACd,aAAa;AACb,cAAc;AACd,cAAc;AACd,MAAM,gBAAgB,GAAG,CAAC,KAAa,EAAU,EAAE;IACjD,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;IAC5B,IAAI,KAAK,KAAK,CAAC,EAAE,CAAC;QAChB,kFAAkF;QAClF,OAAO,EAAE,CAAC;IACZ,CAAC;SAAM,IAAI,KAAK,GAAG,CAAC,EAAE,CAAC;QACrB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;IACtD,CAAC;SAAM,CAAC;QACN,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;IACjD,CAAC;AACH,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,oBAAoB,GAAG;IAClC,EAAE,EAAE,UAAU;IACd,EAAE,EAAE,WAAW;IACf,EAAE,EAAE,eAAe;CACpB,CAAC;AAEF,MAAM,CAAC,MAAM,6BAA6B,GAAG,CAAC,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC;AAC5E,+CAA+C;AAC/C,MAAM,cAAc,GAAG,CAAC,WAAmB,EAA4B,EAAE;IACvE,iCAAiC;IACjC,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;IACrE,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IACxC,aAAa;IACb,MAAM,cAAc,GAAG,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE,CAAC,oBAAoB,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC;IAC5F,OAAO,cAA0C,CAAC;AACpD,CAAC,CAAC;AAIF,MAAM,kBAAkB,GAAG,CAAC,WAAoB,EAAW,EAAE;IAC3D,IAAI,CAAC;QACH,IAAI,CAAC,WAAW;YAAE,OAAO,OAAO,CAAC,QAAQ,CAAC;QAC1C,MAAM,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACxC,IAAI,KAAK,IAAI,KAAK,EAAE,CAAC;YACnB,yCAAyC;YACzC,2FAA2F;YAC3F,OAAO,OAAO,CAAC,IAAI,CAAC;QACtB,CAAC;aAAM,IAAI,KAAK,IAAI,KAAK,EAAE,CAAC;YAC1B,OAAO,OAAO,CAAC,IAAI,CAAC;QACtB,CAAC;aAAM,IAAI,KAAK,IAAI,KAAK,EAAE,CAAC;YAC1B,OAAO,OAAO,CAAC,IAAI,CAAC;QACtB,CAAC;aAAM,CAAC;YACN,OAAO,OAAO,CAAC,QAAQ,CAAC;QAC1B,CAAC;IACH,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACpB,OAAO,OAAO,CAAC,QAAQ,CAAC;IAC1B,CAAC;AACH,CAAC,CAAC;AAEF,MAAM,eAAe,GAAG,KAAK,IAAiC,EAAE;IAC9D,MAAM,YAAY,GAAG;QACnB,0BAA0B;QAC1B,qCAAqC;KACtC,CAAC;IACF,KAAK,MAAM,IAAI,IAAI,YAAY,EAAE,CAAC;QAChC,MAAM,MAAM,GAAG,MAAM,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC;aAC9C,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC;aAChB,KAAK,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC;QAEtB,IAAI,MAAM,EAAE,CAAC;YACX,OAAO,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QACjC,CAAC;IACH,CAAC;IACD,MAAM,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;IACtC,OAAO,SAAS,CAAC;AACnB,CAAC,CAAC;AAGF,MAAM,gBAAgB,GAAG,KAAK,IAAsB,EAAE;IACpD,IAAI,CAAC;QACH,MAAM,KAAK,GAAG,MAAM,eAAe,EAAE,CAAC;QACtC,IAAI,CAAC,KAAK;YAAE,OAAO,OAAO,CAAC,QAAQ,CAAC;QACpC,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAClC,IAAI,KAAK,IAAI,KAAK,EAAE,CAAC;YACnB,yCAAyC;YACzC,2FAA2F;YAC3F,OAAO,OAAO,CAAC,IAAI,CAAC;QACtB,CAAC;aAAM,IAAI,KAAK,IAAI,KAAK,EAAE,CAAC;YAC1B,OAAO,OAAO,CAAC,IAAI,CAAC;QACtB,CAAC;aAAM,CAAC;YACN,MAAM,cAAc,GAAG,MAAM,MAAM,CAAC,0BAA0B,EAAE,SAAS,CAAC,IAAI,CAAC;iBAC5E,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC;iBAChB,KAAK,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC;YACtB,IAAI,cAAc;gBAAE,OAAO,OAAO,CAAC,IAAI,CAAC;QAC1C,CAAC;QACD,OAAO,OAAO,CAAC,QAAQ,CAAC;IAC1B,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACpB,OAAO,OAAO,CAAC,QAAQ,CAAC;IAC1B,CAAC;AACH,CAAC,CAAC;AAEF,MAAM,WAAW,GAAG,MAAM,gBAAgB,EAAE,CAAC;AAE7C,yFAAyF;AACzF,MAAM,CAAC,KAAK,UAAU,gBAAgB,CAAC,QAAgB;IACrD,MAAM,aAAa,GAAG,kBAAkB,CAAC,QAAQ,CAAC,CAAC;IACnD,MAAM,wBAAwB,GAAG,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;IACjE,MAAM,yBAAyB,GAAG,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;IAClE,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;IACtB,OAAO;QACL,IAAI,EAAE;YACJ,uBAAuB,EAAE,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,UAAU,EAAE,EAAE,CAAC;YACtE,mBAAmB,EAAE,gBAAgB,CAAC,aAAa,CAAC,UAAU,CAAC;YAC/D,kBAAkB,EAAE,gBAAgB,CAAC,aAAa,CAAC,YAAY,CAAC;YAChE,gBAAgB,EAAE,wBAAwB;YAC1C,IAAI,EAAE,wBAAwB,GAAG,CAAC;YAClC,gBAAgB,EAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB;SACtD;QACD,KAAK,EAAE;YACL,uBAAuB,EAAE,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,UAAU,EAAE,EAAE,CAAC;YACtE,mBAAmB,EAAE,gBAAgB,CAAC,aAAa,CAAC,UAAU,CAAC;YAC/D,kBAAkB,EAAE,gBAAgB,CAAC,aAAa,CAAC,YAAY,CAAC;YAChE,gBAAgB,EAAE,yBAAyB;YAC3C,IAAI,EAAE,yBAAyB,GAAG,CAAC;YACnC,gBAAgB,EAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB;SACvD;QACD,YAAY,EAAE,kBAAkB,CAAC,aAAa,CAAC,WAAW,CAAC;QAC3D,UAAU,EAAE,WAAW;QACvB,SAAS,EAAE;YACT,OAAO,EAAE,UAAU,CAAC,OAAO;YAC3B,MAAM,EAAE,UAAU,CAAC,MAAM;SAC1B;QACD,UAAU,EAAE,aAAa,CAAC,UAAU;QACpC,SAAS,EAAE,aAAa,CAAC,OAAO,KAAK,MAAM;QAC3C,QAAQ,EAAE,cAAc,CAAC,aAAa,CAAC,QAAQ,CAAC;QAChD,YAAY,EAAE,oBAAoB;KACnC,CAAC;AACJ,CAAC","debug_id":"0f914eba-9e23-5c16-8e1c-b8435692ea64"}