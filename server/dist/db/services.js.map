{"version":3,"file":"services.js","sources":["db/services.ts"],"sourceRoot":"/","sourcesContent":["// LowDB, stores the schedules in /persistent/free-sleep-data/lowdb/schedulesDB.json\nimport _ from 'lodash';\nimport { Low } from 'lowdb';\nimport { JSONFile } from 'lowdb/node';\nimport { Services } from './servicesSchema.js';\nimport config from '../config.js';\n\n\nconst defaultData: Services = {\n  sentryLogging: {\n    enabled: false,\n  },\n  biometrics: {\n    enabled: false,\n    jobs: {\n      installation: {\n        name: 'Biometrics installation',\n        message: '',\n        status: 'not_started',\n        description: 'Whether or not biometrics was installed successfully',\n        timestamp: '',\n      },\n      stream: {\n        name: 'Biometrics stream',\n        message: '',\n        status: 'not_started',\n        description: 'Consumes the sensor data as a stream and calculates biometrics',\n        timestamp: '',\n      },\n      analyzeSleepLeft: {\n        name: 'Analyze sleep - left',\n        message: '',\n        status: 'not_started',\n        description: 'Analyzes sleep period',\n        timestamp: '',\n      },\n      analyzeSleepRight: {\n        name: 'Analyze sleep - right',\n        message: '',\n        status: 'not_started',\n        description: 'Analyzes sleep period',\n        timestamp: '',\n      },\n      calibrateLeft: {\n        name: 'Calibration job - Left',\n        message: '',\n        status: 'not_started',\n        description: 'Calculates presence thresholds for cap sensor data',\n        timestamp: '',\n      },\n      calibrateRight: {\n        name: 'Calibration job - Right',\n        message: '',\n        status: 'not_started',\n        description: 'Calculates presence thresholds for cap sensor data',\n        timestamp: '',\n      }\n    }\n  }\n};\n\n\n\nconst file = new JSONFile<Services>(`${config.lowDbFolder}servicesDB.json`);\nconst servicesDB = new Low<Services>(file, defaultData);\nawait servicesDB.read();\n// Allows us to add default values to the services if users have existing servicesDB.json data\nservicesDB.data = _.merge({}, defaultData, servicesDB.data);\nawait servicesDB.write();\n\nexport default servicesDB;\n"],"names":[],"mappings":"AAAA,oFAAoF;;;AACpF,OAAO,CAAC,MAAM,QAAQ,CAAC;AACvB,OAAO,EAAE,GAAG,EAAE,MAAM,OAAO,CAAC;AAC5B,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AAEtC,OAAO,MAAM,MAAM,cAAc,CAAC;AAGlC,MAAM,WAAW,GAAa;IAC5B,aAAa,EAAE;QACb,OAAO,EAAE,KAAK;KACf;IACD,UAAU,EAAE;QACV,OAAO,EAAE,KAAK;QACd,IAAI,EAAE;YACJ,YAAY,EAAE;gBACZ,IAAI,EAAE,yBAAyB;gBAC/B,OAAO,EAAE,EAAE;gBACX,MAAM,EAAE,aAAa;gBACrB,WAAW,EAAE,sDAAsD;gBACnE,SAAS,EAAE,EAAE;aACd;YACD,MAAM,EAAE;gBACN,IAAI,EAAE,mBAAmB;gBACzB,OAAO,EAAE,EAAE;gBACX,MAAM,EAAE,aAAa;gBACrB,WAAW,EAAE,gEAAgE;gBAC7E,SAAS,EAAE,EAAE;aACd;YACD,gBAAgB,EAAE;gBAChB,IAAI,EAAE,sBAAsB;gBAC5B,OAAO,EAAE,EAAE;gBACX,MAAM,EAAE,aAAa;gBACrB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,EAAE;aACd;YACD,iBAAiB,EAAE;gBACjB,IAAI,EAAE,uBAAuB;gBAC7B,OAAO,EAAE,EAAE;gBACX,MAAM,EAAE,aAAa;gBACrB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,EAAE;aACd;YACD,aAAa,EAAE;gBACb,IAAI,EAAE,wBAAwB;gBAC9B,OAAO,EAAE,EAAE;gBACX,MAAM,EAAE,aAAa;gBACrB,WAAW,EAAE,oDAAoD;gBACjE,SAAS,EAAE,EAAE;aACd;YACD,cAAc,EAAE;gBACd,IAAI,EAAE,yBAAyB;gBAC/B,OAAO,EAAE,EAAE;gBACX,MAAM,EAAE,aAAa;gBACrB,WAAW,EAAE,oDAAoD;gBACjE,SAAS,EAAE,EAAE;aACd;SACF;KACF;CACF,CAAC;AAIF,MAAM,IAAI,GAAG,IAAI,QAAQ,CAAW,GAAG,MAAM,CAAC,WAAW,iBAAiB,CAAC,CAAC;AAC5E,MAAM,UAAU,GAAG,IAAI,GAAG,CAAW,IAAI,EAAE,WAAW,CAAC,CAAC;AACxD,MAAM,UAAU,CAAC,IAAI,EAAE,CAAC;AACxB,8FAA8F;AAC9F,UAAU,CAAC,IAAI,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE,WAAW,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC;AAC5D,MAAM,UAAU,CAAC,KAAK,EAAE,CAAC;AAEzB,eAAe,UAAU,CAAC","debug_id":"49e660aa-df53-52ae-b16f-ccb96e8c84ad"}