{"version":3,"file":"loadMovementRecords.js","sources":["db/loadMovementRecords.ts"],"sourceRoot":"/","sourcesContent":["// Helper file to load raw movement rows from SQLite and convert the epoch timestamps -> ISO8601\nimport { movement as PrismaMovementRecord } from '.prisma/client';\nimport settingsDB from './settings.js';\nimport moment from 'moment-timezone';\n\nimport { MovementRecord } from './prismaDbTypes.js';\n\nexport const loadMovementRecords = async (movementRecords: PrismaMovementRecord[]): Promise<MovementRecord[]> => {\n  await settingsDB.read();\n  const userTimeZone: string = settingsDB.data.timeZone || 'UTC';\n\n  // Parse JSON fields\n  return movementRecords.map((record: any) => ({\n    ...record,\n    timestamp: moment.tz(record.timestamp * 1000, userTimeZone).format(),\n  })) as MovementRecord[];\n};\n"],"names":[],"mappings":";;AAEA,OAAO,UAAU,MAAM,eAAe,CAAC;AACvC,OAAO,MAAM,MAAM,iBAAiB,CAAC;AAIrC,MAAM,CAAC,MAAM,mBAAmB,GAAG,KAAK,EAAE,eAAuC,EAA6B,EAAE;IAC9G,MAAM,UAAU,CAAC,IAAI,EAAE,CAAC;IACxB,MAAM,YAAY,GAAW,UAAU,CAAC,IAAI,CAAC,QAAQ,IAAI,KAAK,CAAC;IAE/D,oBAAoB;IACpB,OAAO,eAAe,CAAC,GAAG,CAAC,CAAC,MAAW,EAAE,EAAE,CAAC,CAAC;QAC3C,GAAG,MAAM;QACT,SAAS,EAAE,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,SAAS,GAAG,IAAI,EAAE,YAAY,CAAC,CAAC,MAAM,EAAE;KACrE,CAAC,CAAqB,CAAC;AAC1B,CAAC,CAAC","debug_id":"47a50504-a32c-51dc-b656-7977ecd11187"}