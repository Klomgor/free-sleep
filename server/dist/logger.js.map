{"version":3,"file":"logger.js","sources":["logger.ts"],"sourceRoot":"/","sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport winston from 'winston';\nimport moment from 'moment';\n\nconst logDir = '/persistent/free-sleep-data/logs';\nconst logFile = path.join(logDir, 'free-sleep.log');\n\n// Try to create directory, or fall back to console only\nlet fileTransport;\ntry {\n  fs.mkdirSync(logDir, { recursive: true });\n  // Test write access\n  fs.accessSync(logDir, fs.constants.W_OK);\n  fileTransport = new winston.transports.File({\n    filename: logFile,\n    maxsize: 7 * 1024 * 1024,\n    maxFiles: 1,\n    tailable: true,\n  });\n} catch (error) {\n  const errorMessage =\n    error instanceof Error\n      ? error.message\n      : typeof error === 'string'\n        ? error\n        : 'Unknown error';\n  const message = `Logger cannot write to ${logDir}, file logging disabled: ${errorMessage}`;\n  console.warn(message);\n}\n\n\nconst transports: Array<winston.transports.ConsoleTransportInstance | winston.transports.FileTransportInstance> = [\n  new winston.transports.Console({\n    format: winston.format.combine(\n      winston.format.colorize(),\n      winston.format.printf(({ timestamp, level, message }) => {\n        return `${timestamp} | ${level.padStart(15)} | ${message}`;\n      })\n    ),\n  }),\n];\n\nif (fileTransport) transports.push(fileTransport);\n\nconst logger = winston.createLogger({\n  level: 'debug',\n  format: winston.format.combine(\n    winston.format.timestamp({\n      format: () => moment.utc().format('YYYY-MM-DD HH:mm:ss [UTC]'),\n    }),\n    winston.format.printf(({ timestamp, level, message }) => {\n      return `${timestamp} | ${level.padStart(8)} | ${message}`;\n    })\n  ),\n  transports,\n});\n\nexport default logger;\n"],"names":[],"mappings":";;AAAA,OAAO,EAAE,MAAM,IAAI,CAAC;AACpB,OAAO,IAAI,MAAM,MAAM,CAAC;AACxB,OAAO,OAAO,MAAM,SAAS,CAAC;AAC9B,OAAO,MAAM,MAAM,QAAQ,CAAC;AAE5B,MAAM,MAAM,GAAG,kCAAkC,CAAC;AAClD,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,gBAAgB,CAAC,CAAC;AAEpD,wDAAwD;AACxD,IAAI,aAAa,CAAC;AAClB,IAAI,CAAC;IACH,EAAE,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;IAC1C,oBAAoB;IACpB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IACzC,aAAa,GAAG,IAAI,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC;QAC1C,QAAQ,EAAE,OAAO;QACjB,OAAO,EAAE,CAAC,GAAG,IAAI,GAAG,IAAI;QACxB,QAAQ,EAAE,CAAC;QACX,QAAQ,EAAE,IAAI;KACf,CAAC,CAAC;AACL,CAAC;AAAC,OAAO,KAAK,EAAE,CAAC;IACf,MAAM,YAAY,GAChB,KAAK,YAAY,KAAK;QACpB,CAAC,CAAC,KAAK,CAAC,OAAO;QACf,CAAC,CAAC,OAAO,KAAK,KAAK,QAAQ;YACzB,CAAC,CAAC,KAAK;YACP,CAAC,CAAC,eAAe,CAAC;IACxB,MAAM,OAAO,GAAG,0BAA0B,MAAM,4BAA4B,YAAY,EAAE,CAAC;IAC3F,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACxB,CAAC;AAGD,MAAM,UAAU,GAAkG;IAChH,IAAI,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC;QAC7B,MAAM,EAAE,OAAO,CAAC,MAAM,CAAC,OAAO,CAC5B,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,EACzB,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE;YACtD,OAAO,GAAG,SAAS,MAAM,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,OAAO,EAAE,CAAC;QAC7D,CAAC,CAAC,CACH;KACF,CAAC;CACH,CAAC;AAEF,IAAI,aAAa;IAAE,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AAElD,MAAM,MAAM,GAAG,OAAO,CAAC,YAAY,CAAC;IAClC,KAAK,EAAE,OAAO;IACd,MAAM,EAAE,OAAO,CAAC,MAAM,CAAC,OAAO,CAC5B,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC;QACvB,MAAM,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,2BAA2B,CAAC;KAC/D,CAAC,EACF,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE;QACtD,OAAO,GAAG,SAAS,MAAM,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,OAAO,EAAE,CAAC;IAC5D,CAAC,CAAC,CACH;IACD,UAAU;CACX,CAAC,CAAC;AAEH,eAAe,MAAM,CAAC","debug_id":"e76d54a3-8ebb-51cd-818f-60009cac455a"}